version: "3.4"

services:
  analyser_torch_serve:
    image: pytorch/torchserve:0.5.3-cpu
  analyser_redis:
    image: redis:6.2.1
    network_mode: host
    command: --port 6379
  analyser:
    image: analyser
    network_mode: host
    build:
      context: ./analyser
      dockerfile: ./Dockerfile
    volumes:
      - type: bind
        source: ./analyser
        target: /app/analyser
      - type: bind
        source: ./data/media/
        target: /media
      - type: bind
        source: ./data/analyser/
        target: /data
    environment:
      - PYTHONPATH=/app

  postgres:
    image: postgres:13.2
    network_mode: "host"
    volumes:
      - ./data/db/:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=tibava
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  memcached:
    image: memcached:1.6.10-buster
    network_mode: "host"
    command: -I 32m

  backend_redis:
    image: redis:6.2.1
    network_mode: host
    command: --port 6380

  backend_celery:
    image: backend_celery
    network_mode: host
    build:
      context: ./backend
    volumes:
      - type: bind
        source: ./data/media/
        target: /media
      - type: bind
        source: ./backend
        target: /backend
      - type: bind
        source: ./data/predictions
        target: /predictions

    working_dir: /backend/
    environment:
      - PYTHONPATH=/backend/
      - TIBAVA_BACKEND_CONFIG=/backend/config.json
    command: celery -A tibava worker -l INFO

  backend:
    image: backend
    build:
      context: ./backend

    network_mode: "host"
    volumes:
      - type: bind
        source: ./data/media/
        target: /media
      - type: bind
        source: ./backend/
        target: /backend
      - type: bind
        source: ./data/predictions
        target: /predictions

    working_dir: /backend/
    environment:
      - PYTHONPATH=/backend/
      - TIBAVA_BACKEND_CONFIG=/backend/config.json
    command: python3 manage.py runserver  0.0.0.0:8000

    depends_on:
      - postgres
      - memcached

  frontend:
    image: frontend
    build:
      context: ./frontend
    network_mode: "host"
    volumes:
      - type: bind
        source: ./frontend/
        target: /frontend
      - type: bind
        source: ./data/predictions/thumbnails/
        target: /thumbnails
      - type: bind
        source: ./data/media/
        target: /media
    working_dir: /frontend
